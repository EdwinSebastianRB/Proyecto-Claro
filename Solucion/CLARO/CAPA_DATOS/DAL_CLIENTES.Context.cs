//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAPA_DATOS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CLAROEntities1 : DbContext
    {
        public CLAROEntities1()
            : base("name=CLAROEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ClIENTES> ClIENTES { get; set; }
        public virtual DbSet<TIPO_IDENTIFICACION> TIPO_IDENTIFICACION { get; set; }
    
        public virtual int UpdateClienteEstado(Nullable<int> id_Cliente, string nombre, string numero_Identificacion, string correo, string telefono, string direccion, string direccion_Instalacion, Nullable<int> id_Tipo_Identificacion, Nullable<bool> estado)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numero_IdentificacionParameter = numero_Identificacion != null ?
                new ObjectParameter("Numero_Identificacion", numero_Identificacion) :
                new ObjectParameter("Numero_Identificacion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var direccion_InstalacionParameter = direccion_Instalacion != null ?
                new ObjectParameter("Direccion_Instalacion", direccion_Instalacion) :
                new ObjectParameter("Direccion_Instalacion", typeof(string));
    
            var id_Tipo_IdentificacionParameter = id_Tipo_Identificacion.HasValue ?
                new ObjectParameter("Id_Tipo_Identificacion", id_Tipo_Identificacion) :
                new ObjectParameter("Id_Tipo_Identificacion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateClienteEstado", id_ClienteParameter, nombreParameter, numero_IdentificacionParameter, correoParameter, telefonoParameter, direccionParameter, direccion_InstalacionParameter, id_Tipo_IdentificacionParameter, estadoParameter);
        }
    }
}
